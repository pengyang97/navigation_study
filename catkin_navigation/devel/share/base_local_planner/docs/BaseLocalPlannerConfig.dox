\subsubsection parameters ROS parameters

Reads and maintains the following parameters on the ROS server

- \b "~acc_lim_x" : \b [double] The acceleration limit of the robot in the x direction min: 0.0, default: 2.5, max: 20.0
- \b "~acc_lim_y" : \b [double] The acceleration limit of the robot in the y direction min: 0.0, default: 2.5, max: 20.0
- \b "~acc_lim_theta" : \b [double] The acceleration limit of the robot in the theta direction min: 0.0, default: 3.2, max: 20.0
- \b "~max_vel_x" : \b [double] The maximum x velocity for the robot in m/s min: 0.0, default: 0.55, max: 20.0
- \b "~min_vel_x" : \b [double] The minimum x velocity for the robot in m/s min: 0.0, default: 0.0, max: 20.0
- \b "~max_vel_theta" : \b [double] The absolute value of the maximum rotational velocity for the robot in rad/s min: 0.0, default: 1.0, max: 20.0
- \b "~min_vel_theta" : \b [double] The absolute value of the minimum rotational velocity for the robot in rad/s min: -20.0, default: -1.0, max: 0.0
- \b "~min_in_place_vel_theta" : \b [double] The absolute value of the minimum in-place rotational velocity the controller will explore min: 0.0, default: 0.4, max: 20.0
- \b "~sim_time" : \b [double] The amount of time to roll trajectories out for in seconds min: 0.0, default: 1.7, max: 10.0
- \b "~sim_granularity" : \b [double] The granularity with which to check for collisions along each trajectory in meters min: 0.0, default: 0.025, max: 5.0
- \b "~angular_sim_granularity" : \b [double] The distance between simulation points for angular velocity should be small enough that the robot doesn't hit things min: 0.0, default: 0.025, max: 1.57079632679
- \b "~pdist_scale" : \b [double] The weight for the path distance part of the cost function min: 0.0, default: 0.6, max: 5.0
- \b "~gdist_scale" : \b [double] The weight for the goal distance part of the cost function min: 0.0, default: 0.8, max: 5.0
- \b "~occdist_scale" : \b [double] The weight for the obstacle distance part of the cost function min: 0.0, default: 0.01, max: 5.0
- \b "~oscillation_reset_dist" : \b [double] The distance the robot must travel before oscillation flags are reset, in meters min: 0.0, default: 0.05, max: 5.0
- \b "~escape_reset_dist" : \b [double] The distance the robot must travel before oscillation flags are reset, in meters min: 0.0, default: 0.1, max: 5.0
- \b "~escape_reset_theta" : \b [double] The distance the robot must travel before oscillation flags are reset, in meters min: 0.0, default: 1.57079632679, max: 5.0
- \b "~vx_samples" : \b [int] The number of samples to use when exploring the x velocity space min: 1, default: 20, max: 300
- \b "~vtheta_samples" : \b [int] The number of samples to use when exploring the theta velocity space min: 1, default: 20, max: 300
- \b "~heading_lookahead" : \b [double] How far the robot should look ahead of itself when differentiating between different rotational velocities min: 0.0, default: 0.325, max: 5.0
- \b "~holonomic_robot" : \b [bool] Set this to true if the robot being controlled can take y velocities and false otherwise min: False, default: True, max: True
- \b "~escape_vel" : \b [double] The velocity to use while backing up min: -2.0, default: -0.1, max: 2.0
- \b "~dwa" : \b [bool] Set this to true to use the Dynamic Window Approach, false to use acceleration limits min: False, default: False, max: True
- \b "~heading_scoring" : \b [bool] Set this to true to use the Dynamic Window Approach, false to use acceleration limits min: False, default: False, max: True
- \b "~heading_scoring_timestep" : \b [double] How far to look ahead in time when we score heading based trajectories min: 0.0, default: 0.1, max: 1.0
- \b "~simple_attractor" : \b [bool] Set this to true to allow simple attraction to a goal point instead of intelligent cost propagation min: False, default: False, max: True
- \b "~y_vels" : \b [str] A comma delimited list of the y velocities the controller will explore min: , default: -0.3,-0.1,0.1,-0.3, max: 
- \b "~restore_defaults" : \b [bool] Retore to the default configuration min: False, default: False, max: True

